{"version":3,"sources":["components/Login/Login.js"],"names":["connect","state","openLoginDrawer","user","userInfo","toggleLoginDrawer","props","title","width","onClose","visible","bodyStyle","paddingBottom","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","message","error","Item","label","rules","required","placeholder","Password","offset","type","htmlType"],"mappings":"iIAAA,qFAuGeA,uBAPS,SAACC,GACrB,MAAO,CACHC,gBAAiBD,EAAME,KAAKD,gBAC5BE,SAASH,EAAME,KAAKC,SAE5B,GAEwC,CACpCC,uBADWL,EA1FD,SAACM,GAEX,IACID,EAGAC,EAHAD,kBACAH,EAEAI,EAFAJ,gBAEAI,EADAF,SAeJ,OACI,mCACI,cAAC,IAAM,CACHG,MAAM,QACNC,MAAO,IACPC,QAjBI,WACZJ,GAAkB,EACtB,EAgBYK,QAASR,EACTS,UAAW,CAAEC,cAAe,IAAK,SAEjC,eAAC,IAAI,CACDC,KAAK,YACLC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,IAEVE,cAAe,CACXC,UAAU,GAEdC,SA5BC,SAACC,GACdf,GAAkB,EACtB,EA2BgBgB,eAzBO,SAACC,GACpBC,IAAQC,MAAM,4CAA4C,EAC9D,EAuB+C,UAE/B,cAAC,IAAKC,KAAI,CACNC,MAAM,WACNb,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVL,QAAS,+BAEf,SAEF,cAAC,IAAK,CAACM,YAAY,iCAEvB,cAAC,IAAKJ,KAAI,CACNC,MAAM,WACNb,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVL,QAAS,+BAEf,SAEF,cAAC,IAAMO,SAAQ,MAEnB,cAAC,IAAKL,KAAI,CACNT,WAAY,CACRe,OAAQ,GACRhB,KAAM,IACR,SAEF,cAAC,IAAM,CAACiB,KAAK,UAAUC,SAAS,SAAQ,SAAC,mBAQjE,G","file":"static/js/11.f474dbb2.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { \n    Drawer, \n    Form, \n    Button, \n    Input,\n    message,\n} from 'antd';\nimport { \n    toggleLoginDrawer,\n} from '../../store/user/userAction';\n\nconst Login = (props) => {\n\n    const {\n        toggleLoginDrawer,\n        openLoginDrawer,\n        userInfo,\n    } = props;\n\n    const onClose = () => {\n        toggleLoginDrawer(false)\n    };\n\n    const onFinish = (values) => {\n        toggleLoginDrawer(false)\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        message.error('Please fill in all the fields of the form',3);\n    };\n\n    return (\n        <>\n            <Drawer\n                title=\"Login\"\n                width={720}\n                onClose={onClose}\n                visible={openLoginDrawer}\n                bodyStyle={{ paddingBottom: 80 }}\n            >\n                <Form\n                    name=\"loginForm\"\n                    labelCol={{\n                        span: 6,\n                    }}\n                    wrapperCol={{\n                        span: 13,\n                    }}\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Username',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"Please enter your Username\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Password',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Drawer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        openLoginDrawer: state.user.openLoginDrawer,\n        userInfo:state.user.userInfo,\n    }\n};\n\nexport default connect(mapStateToProps, { \n    toggleLoginDrawer, \n})(Login)\n"],"sourceRoot":""}